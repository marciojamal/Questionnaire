package br.com.softbox.ejb.entity;
// Generated 17/08/2015 18:01:24 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Option generated by hbm2java
 */
@Entity
@Table(name = "options", catalog = "questionnaire")
public class Option implements java.io.Serializable {

	@Override
	public String toString() {
		return "Option [id=" + id + ", description=" + description + "]";
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 3051695905402279792L;
	private Long id;
	private Question question;
	private String description;
	private int optionOrder;
	private Set<Answer> answers = new HashSet<Answer>(0);

	public Option() {
	}

	public Option(Question question, String description) {
		this.question = question;
		this.description = description;
	}

	public Option(Question question, String description, Set<Answer> answers) {
		this.question = question;
		this.description = description;
		this.answers = answers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "question_id", nullable = false)
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "description", nullable = false, length = 65535)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "answer_has_option", catalog = "questionnaire", joinColumns = {
			@JoinColumn(name = "option_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "answer_id", nullable = false, updatable = false) })
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

	@Column(name = "option_order")
	public int getOptionOrder() {
		return optionOrder;
	}

	public void setOptionOrder(int optionOrder) {
		this.optionOrder = optionOrder;
	}

}
